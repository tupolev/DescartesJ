/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package descartesj;
import java.nio.file.*;
import javax.swing.*;
import java.io.*;
import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.nio.file.LinkOption;
import java.util.ArrayList;
import java.util.HashMap;

/**
 *
 * @author tupolev
 */
public class MainWindow extends javax.swing.JFrame {

    public DirectoryHandler dh;
    public ImageIcon unavailableImage, prevImage, nextImage, currentImage;
    public String app_path;
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        app_path = DirectoryHandler.getAppPath();
        unavailableImage = new ImageIcon(app_path + java.io.File.separator + "images" + java.io.File.separator + "no.gif" );
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabControlMain = new javax.swing.JTabbedPane();
        tabItemInput = new javax.swing.JPanel();
        textBoxInputFolder = new javax.swing.JTextField();
        buttonBrowse = new javax.swing.JButton();
        textBoxOutputSelectedFolder = new javax.swing.JTextField();
        textBoxOutputDiscardedFolder = new javax.swing.JTextField();
        buttonBrowseSelectedFolder = new javax.swing.JButton();
        buttonBrowseDiscardedFolder = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listViewFilesFound = new javax.swing.JList();
        labelNumFiles = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buttonReloadFilesFound = new javax.swing.JButton();
        buttonStartProcess = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        tabItemProcess = new javax.swing.JPanel();
        buttonRestart = new javax.swing.JButton();
        buttonNextStep = new javax.swing.JButton();
        buttonDiscard = new javax.swing.JToggleButton();
        buttonSelect = new javax.swing.JToggleButton();
        labelCurrentImageStatus = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        labelCurrentImagePositionInList = new javax.swing.JLabel();
        buttonPrevImage = new javax.swing.JButton();
        buttonNextImage = new javax.swing.JButton();
        imagePrev = new javax.swing.JLabel();
        imageNext = new javax.swing.JLabel();
        imageCurrent = new javax.swing.JLabel();
        tabItemOutput = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listViewSelectedImages = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        listViewDiscardedImages = new javax.swing.JList();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        comboBoxSelectedImagesMoveCopy = new javax.swing.JComboBox();
        comboBoxSelectedImagesOutputFormat = new javax.swing.JComboBox();
        comboBoxDiscardedImagesMoveCopy = new javax.swing.JComboBox();
        comboBoxDiscardedImagesOutputFormat = new javax.swing.JComboBox();
        buttonEndProcess = new javax.swing.JButton();
        progressBarOutputProcess = new javax.swing.JProgressBar();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        labelNumSelectedImages = new javax.swing.JLabel();
        labelNumDiscardedImages = new javax.swing.JLabel();
        tabItemEnd = new javax.swing.JPanel();
        buttonStartAgainWithSelected = new javax.swing.JButton();
        buttonStartAgainWithDiscarded = new javax.swing.JButton();
        buttonStartAgainWithNew = new javax.swing.JButton();
        buttonExitNow = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        labelSummaryTotalFiles = new javax.swing.JLabel();
        labelSummarySelectedFiles = new javax.swing.JLabel();
        labelSummaryDiscardedFiles = new javax.swing.JLabel();
        labelSummaryIgnoredFiles = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        labelSummaryOpenInputFolder = new javax.swing.JLabel();
        labelSummaryOpenSelectedFolder = new javax.swing.JLabel();
        labelSummaryOpenDiscardedFolder = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                formAncestorResized(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });

        textBoxInputFolder.setText("c:\\");
            textBoxInputFolder.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    textBoxInputFolderActionPerformed(evt);
                }
            });

            buttonBrowse.setText("...");
            buttonBrowse.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    buttonBrowseActionPerformed(evt);
                }
            });

            textBoxOutputSelectedFolder.setText("c:\\");
                textBoxOutputSelectedFolder.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        textBoxOutputSelectedFolderActionPerformed(evt);
                    }
                });

                textBoxOutputDiscardedFolder.setText("c:\\");
                    textBoxOutputDiscardedFolder.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            textBoxOutputDiscardedFolderActionPerformed(evt);
                        }
                    });

                    buttonBrowseSelectedFolder.setText("...");
                    buttonBrowseSelectedFolder.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            buttonBrowseSelectedFolderActionPerformed(evt);
                        }
                    });

                    buttonBrowseDiscardedFolder.setText("...");
                    buttonBrowseDiscardedFolder.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            buttonBrowseDiscardedFolderActionPerformed(evt);
                        }
                    });

                    jScrollPane1.setViewportView(listViewFilesFound);

                    labelNumFiles.setText("0");

                    jLabel2.setText("unique file titles found");

                    buttonReloadFilesFound.setText("Reload");
                    buttonReloadFilesFound.setName("buttonReloadFilesFound"); // NOI18N
                    buttonReloadFilesFound.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            buttonReloadFilesFoundActionPerformed(evt);
                        }
                    });

                    buttonStartProcess.setText("Start process");
                    buttonStartProcess.setEnabled(false);
                    buttonStartProcess.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            buttonStartProcessActionPerformed(evt);
                        }
                    });

                    jLabel1.setText("Select folder to review...");

                    jLabel28.setText("Files found");

                    javax.swing.GroupLayout tabItemInputLayout = new javax.swing.GroupLayout(tabItemInput);
                    tabItemInput.setLayout(tabItemInputLayout);
                    tabItemInputLayout.setHorizontalGroup(
                        tabItemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(tabItemInputLayout.createSequentialGroup()
                            .addGap(21, 21, 21)
                            .addGroup(tabItemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(tabItemInputLayout.createSequentialGroup()
                                    .addComponent(jLabel28)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(tabItemInputLayout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(tabItemInputLayout.createSequentialGroup()
                                    .addGroup(tabItemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(tabItemInputLayout.createSequentialGroup()
                                            .addComponent(textBoxInputFolder)
                                            .addGap(45, 45, 45)
                                            .addComponent(buttonBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(tabItemInputLayout.createSequentialGroup()
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                                            .addGap(18, 18, 18)
                                            .addGroup(tabItemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(tabItemInputLayout.createSequentialGroup()
                                                    .addComponent(labelNumFiles)
                                                    .addGap(43, 43, 43)
                                                    .addComponent(jLabel2)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(buttonReloadFilesFound))
                                                .addGroup(tabItemInputLayout.createSequentialGroup()
                                                    .addGroup(tabItemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(textBoxOutputDiscardedFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(textBoxOutputSelectedFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabItemInputLayout.createSequentialGroup()
                                                            .addGap(80, 80, 80)
                                                            .addComponent(buttonStartProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGap(18, 18, 18)
                                                    .addGroup(tabItemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(buttonBrowseSelectedFolder, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                                                        .addComponent(buttonBrowseDiscardedFolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                                    .addGap(30, 30, 30))))
                    );
                    tabItemInputLayout.setVerticalGroup(
                        tabItemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(tabItemInputLayout.createSequentialGroup()
                            .addContainerGap(44, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(tabItemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(textBoxInputFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buttonBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(31, 31, 31)
                            .addComponent(jLabel28)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(tabItemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(tabItemInputLayout.createSequentialGroup()
                                    .addGroup(tabItemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(labelNumFiles)
                                        .addComponent(jLabel2)
                                        .addComponent(buttonReloadFilesFound, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(tabItemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(textBoxOutputSelectedFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(buttonBrowseSelectedFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(tabItemInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(tabItemInputLayout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addComponent(textBoxOutputDiscardedFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabItemInputLayout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addComponent(buttonBrowseDiscardedFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(71, 71, 71)
                                    .addComponent(buttonStartProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(59, 59, 59))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap(44, Short.MAX_VALUE))
                    );

                    tabControlMain.addTab("1-The input", tabItemInput);

                    tabItemProcess.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                    buttonRestart.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    buttonRestart.setText("<< Restart");
                    buttonRestart.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            buttonRestartActionPerformed(evt);
                        }
                    });

                    buttonNextStep.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    buttonNextStep.setText("Next step >>");
                    buttonNextStep.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            buttonNextStepActionPerformed(evt);
                        }
                    });

                    buttonDiscard.setBackground(new java.awt.Color(153, 255, 0));
                    buttonDiscard.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    buttonDiscard.setText("Select");
                    buttonDiscard.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            buttonDiscardActionPerformed(evt);
                        }
                    });

                    buttonSelect.setBackground(new java.awt.Color(255, 0, 51));
                    buttonSelect.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    buttonSelect.setText("Discard");
                    buttonSelect.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            buttonSelectActionPerformed(evt);
                        }
                    });

                    labelCurrentImageStatus.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    labelCurrentImageStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    labelCurrentImageStatus.setText("UNRATED");

                    jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                    jLabel6.setText("Current image");

                    labelCurrentImagePositionInList.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    labelCurrentImagePositionInList.setText("(0 of 0)");

                    buttonPrevImage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    buttonPrevImage.setText("< Prev. Image");
                    buttonPrevImage.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            buttonPrevImageActionPerformed(evt);
                        }
                    });

                    buttonNextImage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    buttonNextImage.setText("Next image >");
                    buttonNextImage.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            buttonNextImageActionPerformed(evt);
                        }
                    });

                    imagePrev.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                    imageNext.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                    imageCurrent.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                    javax.swing.GroupLayout tabItemProcessLayout = new javax.swing.GroupLayout(tabItemProcess);
                    tabItemProcess.setLayout(tabItemProcessLayout);
                    tabItemProcessLayout.setHorizontalGroup(
                        tabItemProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(tabItemProcessLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(tabItemProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(tabItemProcessLayout.createSequentialGroup()
                                    .addComponent(imagePrev, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(tabItemProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(tabItemProcessLayout.createSequentialGroup()
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(labelCurrentImagePositionInList, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(imageCurrent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(imageNext, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap())
                                .addGroup(tabItemProcessLayout.createSequentialGroup()
                                    .addComponent(buttonRestart)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(buttonPrevImage)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(buttonDiscard)
                                    .addGap(3, 3, 3)
                                    .addComponent(labelCurrentImageStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                                    .addGap(18, 18, 18)
                                    .addComponent(buttonSelect)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(buttonNextImage)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(buttonNextStep)
                                    .addGap(25, 25, 25))))
                    );
                    tabItemProcessLayout.setVerticalGroup(
                        tabItemProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabItemProcessLayout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addGroup(tabItemProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(labelCurrentImagePositionInList))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(tabItemProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(imagePrev, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(imageNext, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(imageCurrent, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(tabItemProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(buttonRestart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buttonPrevImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buttonDiscard, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buttonSelect, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buttonNextImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buttonNextStep, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(labelCurrentImageStatus, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addContainerGap())
                    );

                    tabItemProcessLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {buttonDiscard, buttonNextImage, buttonNextStep, buttonPrevImage, buttonRestart, buttonSelect, labelCurrentImageStatus});

                    tabControlMain.addTab("2-The process", tabItemProcess);

                    listViewSelectedImages.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 0)));
                    jScrollPane2.setViewportView(listViewSelectedImages);

                    listViewDiscardedImages.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
                    jScrollPane3.setViewportView(listViewDiscardedImages);

                    jLabel8.setText("What to do with these images?");

                    jLabel9.setText("Output type");

                    jLabel10.setText("What to do with these images?");

                    jLabel11.setText("Output type");

                    comboBoxSelectedImagesMoveCopy.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Move", "Copy", "Do nothing" }));

                    comboBoxSelectedImagesOutputFormat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Files", "List", "Files and list" }));

                    comboBoxDiscardedImagesMoveCopy.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Move", "Copy", "Do nothing" }));

                    comboBoxDiscardedImagesOutputFormat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Files", "List", "Files and list" }));

                    buttonEndProcess.setText("End process");
                    buttonEndProcess.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            buttonEndProcessActionPerformed(evt);
                        }
                    });

                    jLabel12.setText("Selected images");

                    jLabel13.setText("Discarded image");

                    labelNumSelectedImages.setText("(Collecting data)");

                    labelNumDiscardedImages.setText("(Collecting data)");

                    javax.swing.GroupLayout tabItemOutputLayout = new javax.swing.GroupLayout(tabItemOutput);
                    tabItemOutput.setLayout(tabItemOutputLayout);
                    tabItemOutputLayout.setHorizontalGroup(
                        tabItemOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(tabItemOutputLayout.createSequentialGroup()
                            .addGap(70, 70, 70)
                            .addGroup(tabItemOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(tabItemOutputLayout.createSequentialGroup()
                                    .addGap(0, 78, Short.MAX_VALUE)
                                    .addComponent(buttonEndProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(progressBarOutputProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(tabItemOutputLayout.createSequentialGroup()
                                    .addGap(60, 60, 60)
                                    .addGroup(tabItemOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(tabItemOutputLayout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(comboBoxSelectedImagesMoveCopy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(tabItemOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12)
                                            .addGroup(tabItemOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(labelNumSelectedImages, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(tabItemOutputLayout.createSequentialGroup()
                                                    .addComponent(jLabel9)
                                                    .addGap(146, 146, 146)
                                                    .addComponent(comboBoxSelectedImagesOutputFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(tabItemOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel13)
                                        .addGroup(tabItemOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(comboBoxDiscardedImagesMoveCopy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(comboBoxDiscardedImagesOutputFormat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabItemOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel10)
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel11)
                                                .addComponent(labelNumDiscardedImages))))))
                            .addGap(134, 134, 134))
                    );
                    tabItemOutputLayout.setVerticalGroup(
                        tabItemOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(tabItemOutputLayout.createSequentialGroup()
                            .addGap(25, 25, 25)
                            .addGroup(tabItemOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(jLabel13))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(tabItemOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelNumSelectedImages)
                                .addComponent(labelNumDiscardedImages))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(tabItemOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                .addComponent(jScrollPane2))
                            .addGap(31, 31, 31)
                            .addGroup(tabItemOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(jLabel10)
                                .addComponent(comboBoxSelectedImagesMoveCopy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(comboBoxDiscardedImagesMoveCopy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(21, 21, 21)
                            .addGroup(tabItemOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9)
                                .addComponent(jLabel11)
                                .addComponent(comboBoxSelectedImagesOutputFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(comboBoxDiscardedImagesOutputFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                            .addGroup(tabItemOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(buttonEndProcess, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                                .addComponent(progressBarOutputProcess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(39, 39, 39))
                    );

                    tabControlMain.addTab("3-The output", tabItemOutput);

                    buttonStartAgainWithSelected.setText("Start again, using selected files as input");
                    buttonStartAgainWithSelected.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                    buttonStartAgainWithSelected.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            buttonStartAgainWithSelectedActionPerformed(evt);
                        }
                    });

                    buttonStartAgainWithDiscarded.setText("Start again, using discarded files as input");
                    buttonStartAgainWithDiscarded.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                    buttonStartAgainWithDiscarded.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            buttonStartAgainWithDiscardedActionPerformed(evt);
                        }
                    });

                    buttonStartAgainWithNew.setText("Start again, using a new input folder");
                    buttonStartAgainWithNew.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                    buttonStartAgainWithNew.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            buttonStartAgainWithNewActionPerformed(evt);
                        }
                    });

                    buttonExitNow.setText("Exit now");
                    buttonExitNow.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                    buttonExitNow.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            buttonExitNowActionPerformed(evt);
                        }
                    });

                    jLabel16.setText("What do you want to do next?");

                    labelSummaryTotalFiles.setText("0");

                    labelSummarySelectedFiles.setText("0");

                    labelSummaryDiscardedFiles.setText("0");

                    labelSummaryIgnoredFiles.setText("0");

                    jLabel22.setText("total files");

                    jLabel23.setText("selected files");

                    jLabel24.setText("discarded files");

                    jLabel25.setText("ignored files");

                    jLabel27.setText("Summary");

                    labelSummaryOpenInputFolder.setText("Open input folder");
                    labelSummaryOpenInputFolder.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            labelSummaryOpenInputFolderMouseClicked(evt);
                        }
                    });

                    labelSummaryOpenSelectedFolder.setText("Open selected images folder");
                    labelSummaryOpenSelectedFolder.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            labelSummaryOpenSelectedFolderMouseClicked(evt);
                        }
                    });

                    labelSummaryOpenDiscardedFolder.setText("Open discarded images folder");
                    labelSummaryOpenDiscardedFolder.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            labelSummaryOpenDiscardedFolderMouseClicked(evt);
                        }
                    });

                    javax.swing.GroupLayout tabItemEndLayout = new javax.swing.GroupLayout(tabItemEnd);
                    tabItemEnd.setLayout(tabItemEndLayout);
                    tabItemEndLayout.setHorizontalGroup(
                        tabItemEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(tabItemEndLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(tabItemEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(tabItemEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(buttonStartAgainWithSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonStartAgainWithDiscarded, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                                    .addComponent(buttonStartAgainWithNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonExitNow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel16)
                                    .addComponent(jSeparator1))
                                .addGroup(tabItemEndLayout.createSequentialGroup()
                                    .addComponent(labelSummaryTotalFiles)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel22))
                                .addGroup(tabItemEndLayout.createSequentialGroup()
                                    .addComponent(labelSummarySelectedFiles)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel23))
                                .addGroup(tabItemEndLayout.createSequentialGroup()
                                    .addComponent(labelSummaryDiscardedFiles)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel24))
                                .addGroup(tabItemEndLayout.createSequentialGroup()
                                    .addComponent(labelSummaryIgnoredFiles)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel25))
                                .addComponent(jLabel27)
                                .addComponent(labelSummaryOpenInputFolder)
                                .addComponent(labelSummaryOpenSelectedFolder)
                                .addComponent(labelSummaryOpenDiscardedFolder))
                            .addContainerGap(617, Short.MAX_VALUE))
                    );
                    tabItemEndLayout.setVerticalGroup(
                        tabItemEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabItemEndLayout.createSequentialGroup()
                            .addGap(28, 28, 28)
                            .addComponent(jLabel27)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(tabItemEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelSummaryTotalFiles)
                                .addComponent(jLabel22))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(tabItemEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelSummarySelectedFiles)
                                .addComponent(jLabel23))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(tabItemEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelSummaryDiscardedFiles)
                                .addComponent(jLabel24))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(tabItemEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelSummaryIgnoredFiles)
                                .addComponent(jLabel25))
                            .addGap(43, 43, 43)
                            .addComponent(labelSummaryOpenInputFolder)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(labelSummaryOpenSelectedFolder)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(labelSummaryOpenDiscardedFolder)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                            .addComponent(jLabel16)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(buttonStartAgainWithSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(buttonStartAgainWithDiscarded, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(buttonStartAgainWithNew, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(buttonExitNow, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(63, 63, 63))
                    );

                    tabControlMain.addTab("4-The end", tabItemEnd);

                    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                    getContentPane().setLayout(layout);
                    layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tabControlMain, javax.swing.GroupLayout.Alignment.TRAILING)
                    );
                    layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tabControlMain, javax.swing.GroupLayout.Alignment.TRAILING)
                    );

                    tabControlMain.getAccessibleContext().setAccessibleName("");

                    pack();
                }// </editor-fold>//GEN-END:initComponents

    private void buttonBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseActionPerformed
        JFileChooser folderBrowser = new JFileChooser();
        folderBrowser.setFileSelectionMode( JFileChooser.DIRECTORIES_ONLY);
        int retval = folderBrowser.showOpenDialog(this);
        if (retval == JFileChooser.APPROVE_OPTION)
        {
            textBoxInputFolder.setText(folderBrowser.getSelectedFile().getAbsolutePath());
            textBoxOutputSelectedFolder.setText(textBoxInputFolder.getText() 
                    + java.io.File.separator + "selected" + java.io.File.separator);
            textBoxOutputDiscardedFolder.setText(textBoxInputFolder.getText() 
                    + java.io.File.separator + "discarded" + java.io.File.separator);

            buttonReloadFilesFoundActionPerformed(evt);

        }
    }//GEN-LAST:event_buttonBrowseActionPerformed

    private void buttonReloadFilesFoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonReloadFilesFoundActionPerformed
        listViewFilesFound.removeAll();
        labelNumFiles.setText("Loading");
        dh = new DirectoryHandler(textBoxInputFolder.getText());
        labelNumFiles.setText(dh.fillInputList().toString());
        DefaultListModel model = new DefaultListModel();
        listViewFilesFound.setModel(model);
        for (DImage item : dh.getInputList().getList())
        {

            String extensions = "";
            for (DFile file : item.getFiles()) {
                extensions += "(" + file.getExt() + ")";
            }

            model.add(0, item.getFileTitle() + " " + extensions);


        }
        
        buttonStartProcess.setEnabled(dh.getInputList().getList().size() > 0);
        
        
    }//GEN-LAST:event_buttonReloadFilesFoundActionPerformed

    private void textBoxInputFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBoxInputFolderActionPerformed
        File file = new File(textBoxInputFolder.getText());
        if (file.exists()){
            textBoxInputFolder.setBackground(Color.GREEN);
            if (buttonStartProcess != null) this.buttonStartProcess.setEnabled(true);
        }
        else
        {
            textBoxInputFolder.setBackground(Color.red);
            if (buttonStartProcess != null) this.buttonStartProcess.setEnabled(false);
        }
    }//GEN-LAST:event_textBoxInputFolderActionPerformed

    private void buttonStartProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStartProcessActionPerformed
        if (textBoxInputFolder.getText().equals("")) return;
        dh.getInputList().setCurrent(0);
        descartesj.Utils.setIconDirectToImage(this.unavailableImage, imagePrev);
        
        String outdir = (textBoxOutputSelectedFolder.getText().equals("") 
                ? textBoxInputFolder.getText() + java.io.File.separator + "selected" + java.io.File.separator
                : textBoxOutputSelectedFolder.getText());
        dh.setOutputSelectedPath(outdir);
        
        outdir = (textBoxOutputDiscardedFolder.getText().equals("") 
                ? textBoxInputFolder.getText() + java.io.File.separator + "selected" + java.io.File.separator
                : textBoxOutputDiscardedFolder.getText());
        dh.setOutputDiscardedPath(outdir);

        String pathCurr = dh.getImagePathForItem(dh.getInputList().getCurrent(), ".JPG");
        if ((new java.io.File(pathCurr)).exists())
            descartesj.Utils.setIconImage(pathCurr, imageCurrent);
        else
            descartesj.Utils.setIconDirectToImage(this.unavailableImage, imageCurrent);

        setCurrentImageStatusLabel();

        String pathNext = dh.getImagePathForItem(dh.getInputList().getCurrent() +1, ".JPG");
        if ((new java.io.File(pathNext)).exists())
            descartesj.Utils.setIconImage(pathNext, imageNext);
        else
            descartesj.Utils.setIconDirectToImage(this.unavailableImage, imageNext);

        labelCurrentImagePositionInList.setText(getCurrentImagePositionCaption());
        tabItemProcess.setEnabled(true);
        tabItemOutput.setEnabled(true);
        checkInputListBounds();
        tabControlMain.setSelectedComponent(tabItemProcess);
        tabControlMain.setSelectedIndex(1);
        tabControlMain.doLayout();
    }//GEN-LAST:event_buttonStartProcessActionPerformed

    private static void messagebox(JFrame window, String message, String title, Integer options) {       
        JOptionPane.showMessageDialog(window, message, title, options);    
    }
    private void buttonEndProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEndProcessActionPerformed
        String ps = java.io.File.separator;
        progressBarOutputProcess.setMinimum(0);
        progressBarOutputProcess.setMaximum(dh.getDiscardedList().count() + dh.getSelectedList().count());

        dh.setGenerateListFileForSelectedFiles((comboBoxSelectedImagesOutputFormat.getSelectedIndex() == 1 || comboBoxSelectedImagesOutputFormat.getSelectedIndex() == 2));
        dh.setGenerateListFileForDiscardedFiles((comboBoxDiscardedImagesOutputFormat.getSelectedIndex() == 1 || comboBoxDiscardedImagesOutputFormat.getSelectedIndex() == 2));
        dh.setGenerateFileStructureForSelectedFiles((comboBoxSelectedImagesOutputFormat.getSelectedIndex() == 0 || comboBoxSelectedImagesOutputFormat.getSelectedIndex() == 2));
        dh.setGenerateFileStructureForDiscardedFiles((comboBoxDiscardedImagesOutputFormat.getSelectedIndex() == 0 || comboBoxDiscardedImagesOutputFormat.getSelectedIndex() == 2));
        dh.setDiscardedFilesListFileFullName(dh.getOutputDiscardedPath() + ps +".."+ ps +"descartes.discarded.lst");
        dh.setSelectedFilesListFileFullName(dh.getOutputSelectedPath() + ps +".."+ ps + "descartes.selected.lst");
        dh.setKeepCopyOfDiscardedFiles((comboBoxDiscardedImagesMoveCopy.getSelectedIndex() == 1));
        dh.setKeepCopyOfSelectedFiles((comboBoxSelectedImagesMoveCopy.getSelectedIndex() == 1));
        
       
        
        SeparateFilesTask task = new SeparateFilesTask(dh);
        task.addPropertyChangeListener(
        new PropertyChangeListener() {
            public  void propertyChange(PropertyChangeEvent evt) {
                if ("progress".equals(evt.getPropertyName())) {
                     progressBarOutputProcess.setValue((Integer)evt.getNewValue());
                     progressBarOutputProcess.doLayout();
                     progressBarOutputProcess.repaint();
                     System.out.println("progress desde mainwindow");
                }
                
                if ("state".equals(evt.getPropertyName())
                 && SwingWorker.StateValue.DONE == evt.getNewValue()) {
                    System.out.println("finito desde window");
                    progressBarOutputProcess.setValue(progressBarOutputProcess.getValue()+1);
                    progressBarOutputProcess.doLayout();
                    MainWindow.messagebox((JFrame)descartesj.MainWindow.getFrames()[0], "Process finished!",
                                                "Descartes",
                                                JOptionPane.INFORMATION_MESSAGE);
                    ArrayList<Integer> stats = dh.getProcessStats();
                    labelSummaryTotalFiles.setText(stats.get(0).toString());
                    labelSummarySelectedFiles.setText(stats.get(1).toString());
                    labelSummaryDiscardedFiles.setText(stats.get(2).toString());
                    labelSummaryIgnoredFiles.setText(stats.get(3).toString());
                    tabItemInput.setEnabled(false);
                    tabItemProcess.setEnabled(false);
                    tabItemOutput.setEnabled(false);
                    tabItemEnd.setEnabled(true);
                    tabControlMain.setSelectedComponent(tabItemEnd);
                }
            }
        });

        task.execute();
        
    }//GEN-LAST:event_buttonEndProcessActionPerformed

    private void textBoxOutputSelectedFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBoxOutputSelectedFolderActionPerformed
        if (!textBoxOutputSelectedFolder.getText().equals(""))
            {
                textBoxOutputSelectedFolder.setBackground(Color.GREEN);
                if (buttonStartProcess != null) this.buttonStartProcess.setEnabled(true);
            }
            else
            {
                textBoxOutputSelectedFolder.setBackground(Color.RED);
                if (buttonStartProcess != null) this.buttonStartProcess.setEnabled(false);
            }
    }//GEN-LAST:event_textBoxOutputSelectedFolderActionPerformed

    private void textBoxOutputDiscardedFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBoxOutputDiscardedFolderActionPerformed
        if (!textBoxOutputDiscardedFolder.getText().equals(""))
            {
                textBoxOutputDiscardedFolder.setBackground(Color.GREEN);
                if (buttonStartProcess != null) this.buttonStartProcess.setEnabled(true);
            }
            else
            {
                textBoxOutputDiscardedFolder.setBackground(Color.RED);
                if (buttonStartProcess != null) this.buttonStartProcess.setEnabled(false);
            }
    }//GEN-LAST:event_textBoxOutputDiscardedFolderActionPerformed

    private void buttonBrowseSelectedFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseSelectedFolderActionPerformed
        JFileChooser folderBrowser = new JFileChooser();
        folderBrowser.setFileSelectionMode( JFileChooser.DIRECTORIES_ONLY);
        int retval = folderBrowser.showOpenDialog(this);
        if (retval == JFileChooser.APPROVE_OPTION)
            textBoxOutputSelectedFolder.setText(folderBrowser.getSelectedFile().getPath());
    }//GEN-LAST:event_buttonBrowseSelectedFolderActionPerformed

    private void buttonBrowseDiscardedFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseDiscardedFolderActionPerformed
        JFileChooser folderBrowser = new JFileChooser();
        folderBrowser.setFileSelectionMode( JFileChooser.DIRECTORIES_ONLY);
        int retval = folderBrowser.showOpenDialog(this);
        if (retval == JFileChooser.APPROVE_OPTION)
            textBoxOutputDiscardedFolder.setText(folderBrowser.getSelectedFile().getPath());            
    }//GEN-LAST:event_buttonBrowseDiscardedFolderActionPerformed

    private void buttonExitNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitNowActionPerformed
        System.exit(0);
    }//GEN-LAST:event_buttonExitNowActionPerformed

    private void buttonStartAgainWithNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStartAgainWithNewActionPerformed
        cleanUpControls();
    }//GEN-LAST:event_buttonStartAgainWithNewActionPerformed

    private void labelSummaryOpenInputFolderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelSummaryOpenInputFolderMouseClicked
        dh.openExplorerWindow(dh.getPath());
    }//GEN-LAST:event_labelSummaryOpenInputFolderMouseClicked

    private void buttonStartAgainWithSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStartAgainWithSelectedActionPerformed
        String dir = dh.getOutputSelectedPath();
        cleanUpControls();
        this.loadPreset(dir);
    }//GEN-LAST:event_buttonStartAgainWithSelectedActionPerformed

    private void labelSummaryOpenSelectedFolderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelSummaryOpenSelectedFolderMouseClicked
         dh.openExplorerWindow(dh.getOutputSelectedPath());
    }//GEN-LAST:event_labelSummaryOpenSelectedFolderMouseClicked

    private void labelSummaryOpenDiscardedFolderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelSummaryOpenDiscardedFolderMouseClicked
        dh.openExplorerWindow(dh.getOutputDiscardedPath());
    }//GEN-LAST:event_labelSummaryOpenDiscardedFolderMouseClicked

    private void buttonStartAgainWithDiscardedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStartAgainWithDiscardedActionPerformed
        String dir = dh.getOutputDiscardedPath();
        cleanUpControls();
        this.loadPreset(dir);
    }//GEN-LAST:event_buttonStartAgainWithDiscardedActionPerformed

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        this.dyn_resize();  
    }//GEN-LAST:event_formWindowStateChanged

    private void formAncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_formAncestorResized
        this.dyn_resize();
    }//GEN-LAST:event_formAncestorResized

    private void buttonNextImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNextImageActionPerformed
        Cursor oldCursor = this.getCursor();
        this.setCursor(Cursor.WAIT_CURSOR);

        if (dh.getInputList().getCurrent() < dh.getInputList().count()
            && dh.getInputList().getCurrent() >= 0)
        {
            dh.getInputList().setCurrent(dh.getInputList().getCurrent()+1);

            String pathPrev = dh.getImagePathForItem(dh.getInputList().getCurrent() - 1, ".JPG");

            if ((new java.io.File(pathPrev)).exists())
            descartesj.Utils.setIconImage(pathPrev, imagePrev);
            else
            descartesj.Utils.setIconDirectToImage(this.unavailableImage, imagePrev);

            String pathCurr = dh.getImagePathForItem(dh.getInputList().getCurrent(), ".JPG");
            if ((new java.io.File(pathCurr)).exists())
            descartesj.Utils.setIconImage(pathCurr, imageCurrent);
            else
            descartesj.Utils.setIconDirectToImage(this.unavailableImage, imageCurrent);
            setCurrentImageStatusLabel();

            String pathNext = dh.getImagePathForItem(dh.getInputList().getCurrent() +1, ".JPG");
            if ((new java.io.File(pathNext)).exists())
            descartesj.Utils.setIconImage(pathNext, imageNext);
            else
            descartesj.Utils.setIconDirectToImage(this.unavailableImage, imageNext);
            buttonSelect.setSelected(dh.getInputList().getList().get(dh.getInputList().getCurrent()).getStatus().equalsIgnoreCase("selected"));
            buttonDiscard.setSelected(dh.getInputList().getList().get(dh.getInputList().getCurrent()).getStatus().equalsIgnoreCase("discarded"));

        }
        else
        {
            descartesj.Utils.setIconDirectToImage(this.unavailableImage, imagePrev);
        }
        labelCurrentImagePositionInList.setText(getCurrentImagePositionCaption());
        checkInputListBounds();
        this.setCursor(oldCursor);
    }//GEN-LAST:event_buttonNextImageActionPerformed

    private void buttonPrevImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPrevImageActionPerformed
        Cursor oldCursor = this.getCursor();
        this.setCursor(Cursor.WAIT_CURSOR);
        if ((dh.getInputList().getCurrent() < dh.getInputList().count()) && (dh.getInputList().getCurrent() > 0))
        {
            dh.getInputList().setCurrent(dh.getInputList().getCurrent()-1);

            String pathPrev = dh.getImagePathForItem(dh.getInputList().getCurrent() - 1, ".JPG");
            if ((new java.io.File(pathPrev)).exists())
            descartesj.Utils.setIconImage(pathPrev, imagePrev);
            else
            descartesj.Utils.setIconDirectToImage(this.unavailableImage, imagePrev);

            String pathCurr = dh.getImagePathForItem(dh.getInputList().getCurrent(), ".JPG");
            if ((new java.io.File(pathCurr)).exists())
            descartesj.Utils.setIconImage(pathCurr, imageCurrent);
            else
            descartesj.Utils.setIconDirectToImage(this.unavailableImage, imageCurrent);

            setCurrentImageStatusLabel();

            String pathNext = dh.getImagePathForItem(dh.getInputList().getCurrent() +1, ".JPG");
            if ((new java.io.File(pathNext)).exists())
            descartesj.Utils.setIconImage(pathNext, imageNext);
            else
            descartesj.Utils.setIconDirectToImage(this.unavailableImage, imageNext);

            buttonSelect.setSelected(dh.getInputList().getList().get(dh.getInputList().getCurrent()).getStatus().equalsIgnoreCase("selected"));
            buttonDiscard.setSelected(dh.getInputList().getList().get(dh.getInputList().getCurrent()).getStatus().equalsIgnoreCase("discarded"));
        }
        else
        {
            descartesj.Utils.setIconDirectToImage(this.unavailableImage, imagePrev);
        }
        labelCurrentImagePositionInList.setText(getCurrentImagePositionCaption());
        checkInputListBounds();
        this.setCursor(oldCursor);
    }//GEN-LAST:event_buttonPrevImageActionPerformed

    private void buttonSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSelectActionPerformed
        dh.getInputList().discardCurrent();
        dh.removeFromSelectedList(dh.getInputList().getList().get(dh.getInputList().getCurrent()));
        dh.removeFromDiscardedList(dh.getInputList().getList().get(dh.getInputList().getCurrent()));
        dh.addToDiscardedList(dh.getInputList().getList().get(dh.getInputList().getCurrent()));
        setCurrentImageStatusLabel();
    }//GEN-LAST:event_buttonSelectActionPerformed

    private void buttonDiscardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDiscardActionPerformed
        dh.getInputList().selectCurrent();
        dh.removeFromDiscardedList(dh.getInputList().getList().get(dh.getInputList().getCurrent()));
        dh.removeFromSelectedList(dh.getInputList().getList().get(dh.getInputList().getCurrent()));
        dh.addToSelectedList(dh.getInputList().getList().get(dh.getInputList().getCurrent()));
        setCurrentImageStatusLabel();
    }//GEN-LAST:event_buttonDiscardActionPerformed

    private void buttonNextStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNextStepActionPerformed
        listViewSelectedImages.removeAll();
        DefaultListModel listModelSelected = new DefaultListModel();
        listViewSelectedImages.setModel(listModelSelected);
        listViewDiscardedImages.removeAll();
        DefaultListModel listModelDiscarded = new DefaultListModel();
        listViewDiscardedImages.setModel(listModelDiscarded);
        for (DImage item : dh.getSelectedList().getList())
        {
            String extensions = "";
            for (DFile file : item.getFiles())
            {
                extensions += "(" + file.getExt() + ")";
            }

            listModelSelected.addElement(
                item.getFileTitle() + " " + extensions
            );
        }
        labelNumSelectedImages.setText("(" + dh.getSelectedList().count() + ")");
        for (DImage item : dh.getDiscardedList().getList())
        {
            String extensions = "";
            for (DFile file : item.getFiles())
            {
                extensions += "(" + file.getExt() + ")";
            }

            listModelDiscarded.addElement(
                item.getFileTitle() + " " + extensions
            );
        }
        labelNumDiscardedImages.setText("(" + dh.getDiscardedList().count() + ")");
        tabControlMain.setSelectedComponent(tabItemOutput);
    }//GEN-LAST:event_buttonNextStepActionPerformed

    private void buttonRestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRestartActionPerformed
        this.buttonStartProcessActionPerformed(evt);
    }//GEN-LAST:event_buttonRestartActionPerformed

    
    private Boolean cleanUpControls(){
            Boolean ret = true;
            ret = dh.cleanupProcessVars();
            progressBarOutputProcess.setValue(0);
            progressBarOutputProcess.setMaximum(0);
            listViewDiscardedImages.removeAll();
            listViewSelectedImages.removeAll();
            descartesj.Utils.setIconDirectToImage(this.unavailableImage, imageCurrent);
            descartesj.Utils.setIconDirectToImage(this.unavailableImage, imageNext);
            descartesj.Utils.setIconDirectToImage(this.unavailableImage, imagePrev);
            buttonPrevImage.setEnabled(false);
            buttonNextImage.setEnabled(false);
            listViewFilesFound.removeAll();
            labelNumFiles.setText("0");
            String ps = java.io.File.separator;
            String app_path = DirectoryHandler.getAppPath() + ps;
            
            textBoxOutputDiscardedFolder.setText(app_path);
            textBoxOutputSelectedFolder.setText(app_path);
            textBoxInputFolder.setText(app_path);
            buttonStartProcess.setEnabled(false);
            tabItemInput.setEnabled(true);
            tabItemProcess.setEnabled(false);
            tabItemOutput.setEnabled(false);
            tabItemEnd.setEnabled(false);
            tabControlMain.setSelectedComponent(tabItemInput);
            return ret;
        }

    private void loadPreset(String initialDir) {
        String ps = java.io.File.separator;
        textBoxInputFolder.setText(initialDir);
        textBoxOutputSelectedFolder.setText(textBoxInputFolder.getText() + "selected" + ps);
        textBoxOutputDiscardedFolder.setText(textBoxInputFolder.getText() + "discarded" + ps);
        this.buttonReloadFilesFoundActionPerformed(null);
        tabControlMain.setSelectedComponent(tabItemInput);
        this.buttonStartProcess.setEnabled(true);
    }
        
    private String getCurrentImagePositionCaption() {
            return "(" + (dh.getInputList().getCurrent() + 1) + " of " + dh.getInputList().count() + ")";
        }

    private void setCurrentImageStatusLabel()
    {
        if (dh.getInputList().getList().get(dh.getInputList().getCurrent()).getStatus().equals("selected"))
        {

            labelCurrentImageStatus.setForeground(Color.GREEN);
            labelCurrentImageStatus.setText("SELECTED");
        }
        else if (dh.getInputList().getList().get(dh.getInputList().getCurrent()).getStatus().equals("discarded"))
        {
            labelCurrentImageStatus.setForeground(Color.RED);
            labelCurrentImageStatus.setText("DISCARDED");
        }
        else
        {
            labelCurrentImageStatus.setForeground(Color.DARK_GRAY);
            labelCurrentImageStatus.setText("UNRATED");
        }
    }
    
    private void checkInputListBounds()
    {
        //check prev button
        if (dh.getInputList().count() > 0 && dh.getInputList().getCurrent() != 0)
        {
            buttonPrevImage.setEnabled(true);
        }
        else
        {
            buttonPrevImage.setEnabled(false);
        }

        //check next button
        if (dh.getInputList().count() > 0
                && dh.getInputList().getCurrent() < dh.getInputList().count() - 1)
        {
            buttonNextImage.setEnabled(true);
        }
        else
        {
            buttonNextImage.setEnabled(false);
        }

    }
        
        
        private void dyn_resize()
        {
            this.doLayout();
        }
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBrowse;
    private javax.swing.JButton buttonBrowseDiscardedFolder;
    private javax.swing.JButton buttonBrowseSelectedFolder;
    private javax.swing.JToggleButton buttonDiscard;
    private javax.swing.JButton buttonEndProcess;
    private javax.swing.JButton buttonExitNow;
    private javax.swing.JButton buttonNextImage;
    private javax.swing.JButton buttonNextStep;
    private javax.swing.JButton buttonPrevImage;
    private javax.swing.JButton buttonReloadFilesFound;
    private javax.swing.JButton buttonRestart;
    private javax.swing.JToggleButton buttonSelect;
    private javax.swing.JButton buttonStartAgainWithDiscarded;
    private javax.swing.JButton buttonStartAgainWithNew;
    private javax.swing.JButton buttonStartAgainWithSelected;
    private javax.swing.JButton buttonStartProcess;
    private javax.swing.JComboBox comboBoxDiscardedImagesMoveCopy;
    private javax.swing.JComboBox comboBoxDiscardedImagesOutputFormat;
    private javax.swing.JComboBox comboBoxSelectedImagesMoveCopy;
    private javax.swing.JComboBox comboBoxSelectedImagesOutputFormat;
    private javax.swing.JLabel imageCurrent;
    private javax.swing.JLabel imageNext;
    private javax.swing.JLabel imagePrev;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelCurrentImagePositionInList;
    private javax.swing.JLabel labelCurrentImageStatus;
    private javax.swing.JLabel labelNumDiscardedImages;
    private javax.swing.JLabel labelNumFiles;
    private javax.swing.JLabel labelNumSelectedImages;
    private javax.swing.JLabel labelSummaryDiscardedFiles;
    private javax.swing.JLabel labelSummaryIgnoredFiles;
    private javax.swing.JLabel labelSummaryOpenDiscardedFolder;
    private javax.swing.JLabel labelSummaryOpenInputFolder;
    private javax.swing.JLabel labelSummaryOpenSelectedFolder;
    private javax.swing.JLabel labelSummarySelectedFiles;
    private javax.swing.JLabel labelSummaryTotalFiles;
    private javax.swing.JList listViewDiscardedImages;
    private javax.swing.JList listViewFilesFound;
    private javax.swing.JList listViewSelectedImages;
    private javax.swing.JProgressBar progressBarOutputProcess;
    private javax.swing.JTabbedPane tabControlMain;
    private javax.swing.JPanel tabItemEnd;
    private javax.swing.JPanel tabItemInput;
    private javax.swing.JPanel tabItemOutput;
    private javax.swing.JPanel tabItemProcess;
    private javax.swing.JTextField textBoxInputFolder;
    private javax.swing.JTextField textBoxOutputDiscardedFolder;
    private javax.swing.JTextField textBoxOutputSelectedFolder;
    // End of variables declaration//GEN-END:variables
}
